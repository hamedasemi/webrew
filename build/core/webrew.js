'use strict';

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _webrewHelpersLog = require('webrew-helpers-log');

var _execute = require('./execute');

var _execute2 = _interopRequireDefault(_execute);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var processArgumentsList = process.argv;
var processArgumentsString = (0, _stringify2.default)(process.argv);

(0, _webrewHelpersLog.debug)('Raw process argv:', processArgumentsString);

// Extract input list out of process arguments
var inputList = processArgumentsList.filter(function (input) {
    return !input.search(/[A-Z,a-z,-]/ig);
});

// Extract commands out of input list
var commandsList = inputList.filter(function (input) {
    return input.search(/(--|-)/g);
});

// Extract options out of input list
var optionsList = inputList.filter(function (input) {
    return !input.search(/(--|-)/g);
});

var group = commandsList[0] || 'default';
var command = commandsList[1] || 'default';

(0, _webrewHelpersLog.debug)('Extracted commands list:', commandsList);
(0, _webrewHelpersLog.debug)('Extracted options list:', optionsList);
(0, _webrewHelpersLog.info)('Group:', group, 'Command:', command);

var execute = new _execute2.default({
    group: group,
    command: command,
    options: optionsList
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb3JlL3dlYnJldy5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzQXJndW1lbnRzTGlzdCIsInByb2Nlc3MiLCJhcmd2IiwicHJvY2Vzc0FyZ3VtZW50c1N0cmluZyIsImlucHV0TGlzdCIsImZpbHRlciIsImlucHV0Iiwic2VhcmNoIiwiY29tbWFuZHNMaXN0Iiwib3B0aW9uc0xpc3QiLCJncm91cCIsImNvbW1hbmQiLCJleGVjdXRlIiwib3B0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUE7Ozs7OztBQUVBLElBQUlBLHVCQUF1QkMsUUFBUUMsSUFBbkM7QUFDQSxJQUFJQyx5QkFBeUIseUJBQWVGLFFBQVFDLElBQXZCLENBQTdCOztBQUVBLGtEQUEyQkMsc0JBQTNCOztBQUVBO0FBQ0EsSUFBSUMsWUFBWUoscUJBQXFCSyxNQUFyQixDQUE0QixVQUFDQyxLQUFELEVBQVc7QUFDbkQsV0FBTyxDQUFDQSxNQUFNQyxNQUFOLENBQWEsZUFBYixDQUFSO0FBQ0gsQ0FGZSxDQUFoQjs7QUFJQTtBQUNBLElBQUlDLGVBQWVKLFVBQVVDLE1BQVYsQ0FBaUIsVUFBQ0MsS0FBRCxFQUFXO0FBQzNDLFdBQU9BLE1BQU1DLE1BQU4sQ0FBYSxTQUFiLENBQVA7QUFDSCxDQUZrQixDQUFuQjs7QUFJQTtBQUNBLElBQUlFLGNBQWNMLFVBQVVDLE1BQVYsQ0FBaUIsVUFBQ0MsS0FBRCxFQUFXO0FBQzFDLFdBQU8sQ0FBQ0EsTUFBTUMsTUFBTixDQUFhLFNBQWIsQ0FBUjtBQUNILENBRmlCLENBQWxCOztBQUtBLElBQUlHLFFBQVFGLGFBQWEsQ0FBYixjQUFaO0FBQ0EsSUFBSUcsVUFBVUgsYUFBYSxDQUFiLGNBQWQ7O0FBRUEseURBQWtDQSxZQUFsQztBQUNBLHdEQUFpQ0MsV0FBakM7QUFDQSxzQ0FBZUMsS0FBZixjQUFrQ0MsT0FBbEM7O0FBR0EsSUFBSUMsVUFBVSxzQkFBWTtBQUN0QkYsV0FBT0EsS0FEZTtBQUV0QkMsYUFBU0EsT0FGYTtBQUd0QkUsYUFBU0o7QUFIYSxDQUFaLENBQWQiLCJmaWxlIjoid2VicmV3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVidWcsIGluZm8gfSBmcm9tICd3ZWJyZXctaGVscGVycy1sb2cnXG5cbmltcG9ydCBFeGVjdXRlIGZyb20gJy4vZXhlY3V0ZSdcblxubGV0IHByb2Nlc3NBcmd1bWVudHNMaXN0ID0gcHJvY2Vzcy5hcmd2XG5sZXQgcHJvY2Vzc0FyZ3VtZW50c1N0cmluZyA9IEpTT04uc3RyaW5naWZ5KHByb2Nlc3MuYXJndilcblxuZGVidWcoYFJhdyBwcm9jZXNzIGFyZ3Y6YCwgcHJvY2Vzc0FyZ3VtZW50c1N0cmluZylcblxuLy8gRXh0cmFjdCBpbnB1dCBsaXN0IG91dCBvZiBwcm9jZXNzIGFyZ3VtZW50c1xubGV0IGlucHV0TGlzdCA9IHByb2Nlc3NBcmd1bWVudHNMaXN0LmZpbHRlcigoaW5wdXQpID0+IHtcbiAgICByZXR1cm4gIWlucHV0LnNlYXJjaCgvW0EtWixhLXosLV0vaWcpXG59KVxuXG4vLyBFeHRyYWN0IGNvbW1hbmRzIG91dCBvZiBpbnB1dCBsaXN0XG5sZXQgY29tbWFuZHNMaXN0ID0gaW5wdXRMaXN0LmZpbHRlcigoaW5wdXQpID0+IHtcbiAgICByZXR1cm4gaW5wdXQuc2VhcmNoKC8oLS18LSkvZylcbn0pXG5cbi8vIEV4dHJhY3Qgb3B0aW9ucyBvdXQgb2YgaW5wdXQgbGlzdFxubGV0IG9wdGlvbnNMaXN0ID0gaW5wdXRMaXN0LmZpbHRlcigoaW5wdXQpID0+IHtcbiAgICByZXR1cm4gIWlucHV0LnNlYXJjaCgvKC0tfC0pL2cpXG59KVxuXG5cbmxldCBncm91cCA9IGNvbW1hbmRzTGlzdFswXSB8fCBgZGVmYXVsdGBcbmxldCBjb21tYW5kID0gY29tbWFuZHNMaXN0WzFdIHx8IGBkZWZhdWx0YFxuXG5kZWJ1ZyhgRXh0cmFjdGVkIGNvbW1hbmRzIGxpc3Q6YCwgY29tbWFuZHNMaXN0KVxuZGVidWcoYEV4dHJhY3RlZCBvcHRpb25zIGxpc3Q6YCwgb3B0aW9uc0xpc3QpXG5pbmZvKGBHcm91cDpgLCBncm91cCwgYENvbW1hbmQ6YCwgY29tbWFuZClcblxuXG5sZXQgZXhlY3V0ZSA9IG5ldyBFeGVjdXRlKHtcbiAgICBncm91cDogZ3JvdXAsXG4gICAgY29tbWFuZDogY29tbWFuZCxcbiAgICBvcHRpb25zOiBvcHRpb25zTGlzdFxufSkiXX0=